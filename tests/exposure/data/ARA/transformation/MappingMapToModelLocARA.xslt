<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2015r4

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:vmf="http://www.altova.com/MapForce/UDF/vmf" xmlns:agt="http://www.altova.com/Mapforce/agt" xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="vmf agt xs">
	<xsl:template name="vmf:vmf1_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='ME'">
				<xsl:value-of select="'13'"/>
			</xsl:when>
			<xsl:when test="$input='NH'">
				<xsl:value-of select="'33'"/>
			</xsl:when>
			<xsl:when test="$input='VT'">
				<xsl:value-of select="'50'"/>
			</xsl:when>
			<xsl:when test="$input='MA'">
				<xsl:value-of select="'25'"/>
			</xsl:when>
			<xsl:when test="$input='RI'">
				<xsl:value-of select="'44'"/>
			</xsl:when>
			<xsl:when test="$input='CT'">
				<xsl:value-of select="'09'"/>
			</xsl:when>
			<xsl:when test="$input='NY'">
				<xsl:value-of select="'36'"/>
			</xsl:when>
			<xsl:when test="$input='NJ'">
				<xsl:value-of select="'34'"/>
			</xsl:when>
			<xsl:when test="$input='PA'">
				<xsl:value-of select="'42'"/>
			</xsl:when>
			<xsl:when test="$input='DE'">
				<xsl:value-of select="'10'"/>
			</xsl:when>
			<xsl:when test="$input='MD'">
				<xsl:value-of select="'24'"/>
			</xsl:when>
			<xsl:when test="$input='DC'">
				<xsl:value-of select="'11'"/>
			</xsl:when>
			<xsl:when test="$input='WV'">
				<xsl:value-of select="'54'"/>
			</xsl:when>
			<xsl:when test="$input='VA'">
				<xsl:value-of select="'51'"/>
			</xsl:when>
			<xsl:when test="$input='NC'">
				<xsl:value-of select="'37'"/>
			</xsl:when>
			<xsl:when test="$input='SC'">
				<xsl:value-of select="'45'"/>
			</xsl:when>
			<xsl:when test="$input='GA'">
				<xsl:value-of select="'13'"/>
			</xsl:when>
			<xsl:when test="$input='FL'">
				<xsl:value-of select="'12'"/>
			</xsl:when>
			<xsl:when test="$input='AL'">
				<xsl:value-of select="'01'"/>
			</xsl:when>
			<xsl:when test="$input='MS'">
				<xsl:value-of select="'28'"/>
			</xsl:when>
			<xsl:when test="$input='LA'">
				<xsl:value-of select="'22'"/>
			</xsl:when>
			<xsl:when test="$input='TX'">
				<xsl:value-of select="'48'"/>
			</xsl:when>
			<xsl:when test="$input='X'">
				<xsl:value-of select="'00'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'00'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf2_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='ATC'">
				<xsl:value-of select="'AIR'"/>
			</xsl:when>
			<xsl:when test="$input='FIRE'">
				<xsl:value-of select="'AIR'"/>
			</xsl:when>
			<xsl:when test="$input='ISO'">
				<xsl:value-of select="'AIR'"/>
			</xsl:when>
			<xsl:when test="$input='RMS'">
				<xsl:value-of select="'AIR'"/>
			</xsl:when>
			<xsl:when test="$input='RMSIND'">
				<xsl:value-of select="'AIR'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'AIR'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf3_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='RMS0'">
				<xsl:value-of select="'100'"/>
			</xsl:when>
			<xsl:when test="$input='RMS1'">
				<xsl:value-of select="'101'"/>
			</xsl:when>
			<xsl:when test="$input='RMS2'">
				<xsl:value-of select="'111'"/>
			</xsl:when>
			<xsl:when test="$input='RMS2A'">
				<xsl:value-of select="'114'"/>
			</xsl:when>
			<xsl:when test="$input='RMS2B'">
				<xsl:value-of select="'114'"/>
			</xsl:when>
			<xsl:when test="$input='RMS2C'">
				<xsl:value-of select="'116'"/>
			</xsl:when>
			<xsl:when test="$input='RMS3'">
				<xsl:value-of select="'131'"/>
			</xsl:when>
			<xsl:when test="$input='RMS4'">
				<xsl:value-of select="'151'"/>
			</xsl:when>
			<xsl:when test="$input='RMS4B'">
				<xsl:value-of select="'152'"/>
			</xsl:when>
			<xsl:when test="$input='RMS5'">
				<xsl:value-of select="'191'"/>
			</xsl:when>
			<xsl:when test="$input='RMS5A'">
				<xsl:value-of select="'192'"/>
			</xsl:when>
			<xsl:when test="$input='RMS5B'">
				<xsl:value-of select="'194'"/>
			</xsl:when>
			<xsl:when test="$input='RMS6'">
				<xsl:value-of select="'201'"/>
			</xsl:when>
			<xsl:when test="$input='RMS7'">
				<xsl:value-of select="'202'"/>
			</xsl:when>
			<xsl:when test="$input='RMS8'">
				<xsl:value-of select="'203'"/>
			</xsl:when>
			<xsl:when test="$input='ISO1'">
				<xsl:value-of select="'101'"/>
			</xsl:when>
			<xsl:when test="$input='ISO2'">
				<xsl:value-of select="'119'"/>
			</xsl:when>
			<xsl:when test="$input='ISO3'">
				<xsl:value-of select="'152'"/>
			</xsl:when>
			<xsl:when test="$input='ISO4'">
				<xsl:value-of select="'111'"/>
			</xsl:when>
			<xsl:when test="$input='ISO5'">
				<xsl:value-of select="'151'"/>
			</xsl:when>
			<xsl:when test="$input='ISO0'">
				<xsl:value-of select="'100'"/>
			</xsl:when>
			<xsl:when test="$input='ISO6'">
				<xsl:value-of select="'131'"/>
			</xsl:when>
			<xsl:when test="$input='RMS1A'">
				<xsl:value-of select="'101'"/>
			</xsl:when>
			<xsl:when test="$input='RMS1B'">
				<xsl:value-of select="'104'"/>
			</xsl:when>
			<xsl:when test="$input='RMS3A'">
				<xsl:value-of select="'131'"/>
			</xsl:when>
			<xsl:when test="$input='RMS3B'">
				<xsl:value-of select="'131'"/>
			</xsl:when>
			<xsl:when test="$input='RMS3B4'">
				<xsl:value-of select="'131'"/>
			</xsl:when>
			<xsl:when test="$input='RMS3C'">
				<xsl:value-of select="'151'"/>
			</xsl:when>
			<xsl:when test="$input='RMS4A'">
				<xsl:value-of select="'151'"/>
			</xsl:when>
			<xsl:when test="$input='RMS4C'">
				<xsl:value-of select="'151'"/>
			</xsl:when>
			<xsl:when test="$input='ISO7'">
				<xsl:value-of select="'154'"/>
			</xsl:when>
			<xsl:when test="$input='ISO8'">
				<xsl:value-of select="'134'"/>
			</xsl:when>
			<xsl:when test="$input='ISO9'">
				<xsl:value-of select="'133'"/>
			</xsl:when>
			<xsl:when test="$input='ATC0'">
				<xsl:value-of select="'100'"/>
			</xsl:when>
			<xsl:when test="$input='ATC1'">
				<xsl:value-of select="'101'"/>
			</xsl:when>
			<xsl:when test="$input='ATC2'">
				<xsl:value-of select="'152'"/>
			</xsl:when>
			<xsl:when test="$input='ATC3'">
				<xsl:value-of select="'114'"/>
			</xsl:when>
			<xsl:when test="$input='ATC4'">
				<xsl:value-of select="'115'"/>
			</xsl:when>
			<xsl:when test="$input='ATC5'">
				<xsl:value-of select="'132'"/>
			</xsl:when>
			<xsl:when test="$input='ATC6'">
				<xsl:value-of select="'133'"/>
			</xsl:when>
			<xsl:when test="$input='ATC7'">
				<xsl:value-of select="'116'"/>
			</xsl:when>
			<xsl:when test="$input='ATC8'">
				<xsl:value-of select="'117'"/>
			</xsl:when>
			<xsl:when test="$input='ATC9'">
				<xsl:value-of select="'153'"/>
			</xsl:when>
			<xsl:when test="$input='ATC10'">
				<xsl:value-of select="'154'"/>
			</xsl:when>
			<xsl:when test="$input='ATC11'">
				<xsl:value-of select="'155'"/>
			</xsl:when>
			<xsl:when test="$input='ATC12'">
				<xsl:value-of select="'134'"/>
			</xsl:when>
			<xsl:when test="$input='ATC13'">
				<xsl:value-of select="'135'"/>
			</xsl:when>
			<xsl:when test="$input='ATC14'">
				<xsl:value-of select="'137'"/>
			</xsl:when>
			<xsl:when test="$input='ATC15'">
				<xsl:value-of select="'181'"/>
			</xsl:when>
			<xsl:when test="$input='ATC16'">
				<xsl:value-of select="'136'"/>
			</xsl:when>
			<xsl:when test="$input='ATC17'">
				<xsl:value-of select="'191'"/>
			</xsl:when>
			<xsl:when test="$input='ATC18'">
				<xsl:value-of select="'151'"/>
			</xsl:when>
			<xsl:when test="$input='FIRE0'">
				<xsl:value-of select="'100'"/>
			</xsl:when>
			<xsl:when test="$input='FIRE1'">
				<xsl:value-of select="'101'"/>
			</xsl:when>
			<xsl:when test="$input='FIRE2'">
				<xsl:value-of select="'111'"/>
			</xsl:when>
			<xsl:when test="$input='FIRE3'">
				<xsl:value-of select="'131'"/>
			</xsl:when>
			<xsl:when test="$input='FIRE4'">
				<xsl:value-of select="'111'"/>
			</xsl:when>
			<xsl:when test="$input='FIRE5'">
				<xsl:value-of select="'111'"/>
			</xsl:when>
			<xsl:when test="$input='FIRE6'">
				<xsl:value-of select="'111'"/>
			</xsl:when>
			<xsl:when test="$input='FIRE7'">
				<xsl:value-of select="'104'"/>
			</xsl:when>
			<xsl:when test="$input='FIRE8'">
				<xsl:value-of select="'111'"/>
			</xsl:when>
			<xsl:when test="$input='FIRE9'">
				<xsl:value-of select="'111'"/>
			</xsl:when>
			<xsl:when test="$input='ISO10'">
				<xsl:value-of select="'137'"/>
			</xsl:when>
			<xsl:when test="$input='ISO11'">
				<xsl:value-of select="'135'"/>
			</xsl:when>
			<xsl:when test="$input='ISO12'">
				<xsl:value-of select="'117'"/>
			</xsl:when>
			<xsl:when test="$input='ISO13'">
				<xsl:value-of select="'136'"/>
			</xsl:when>
			<xsl:when test="$input='ISO14'">
				<xsl:value-of select="'115'"/>
			</xsl:when>
			<xsl:when test="$input='ISO15'">
				<xsl:value-of select="'114'"/>
			</xsl:when>
			<xsl:when test="$input='ISO16'">
				<xsl:value-of select="'153'"/>
			</xsl:when>
			<xsl:when test="$input='ISO17'">
				<xsl:value-of select="'191'"/>
			</xsl:when>
			<xsl:when test="$input='ISO18'">
				<xsl:value-of select="'151'"/>
			</xsl:when>
			<xsl:when test="$input='RMS2B3'">
				<xsl:value-of select="'114'"/>
			</xsl:when>
			<xsl:when test="$input='RMS4A3'">
				<xsl:value-of select="'151'"/>
			</xsl:when>
			<xsl:when test="$input='RMS53'">
				<xsl:value-of select="'101'"/>
			</xsl:when>
			<xsl:when test="$input='RMS1B1'">
				<xsl:value-of select="'104'"/>
			</xsl:when>
			<xsl:when test="$input='RMS3A3'">
				<xsl:value-of select="'131'"/>
			</xsl:when>
			<xsl:when test="$input='RMS1A1'">
				<xsl:value-of select="'101'"/>
			</xsl:when>
			<xsl:when test="$input='RMS1A2'">
				<xsl:value-of select="'101'"/>
			</xsl:when>
			<xsl:when test="$input='RMS1B2'">
				<xsl:value-of select="'104'"/>
			</xsl:when>
			<xsl:when test="$input='RMS2A1'">
				<xsl:value-of select="'114'"/>
			</xsl:when>
			<xsl:when test="$input='RMS2B1'">
				<xsl:value-of select="'114'"/>
			</xsl:when>
			<xsl:when test="$input='RMS2B2'">
				<xsl:value-of select="'114'"/>
			</xsl:when>
			<xsl:when test="$input='RMS2C1'">
				<xsl:value-of select="'116'"/>
			</xsl:when>
			<xsl:when test="$input='RMS2C2'">
				<xsl:value-of select="'116'"/>
			</xsl:when>
			<xsl:when test="$input='RMS3A1'">
				<xsl:value-of select="'131'"/>
			</xsl:when>
			<xsl:when test="$input='RMS3A2'">
				<xsl:value-of select="'131'"/>
			</xsl:when>
			<xsl:when test="$input='RMS3A4'">
				<xsl:value-of select="'131'"/>
			</xsl:when>
			<xsl:when test="$input='RMS3A5'">
				<xsl:value-of select="'131'"/>
			</xsl:when>
			<xsl:when test="$input='RMS3A6'">
				<xsl:value-of select="'131'"/>
			</xsl:when>
			<xsl:when test="$input='RMS3B1'">
				<xsl:value-of select="'131'"/>
			</xsl:when>
			<xsl:when test="$input='RMS3B2'">
				<xsl:value-of select="'131'"/>
			</xsl:when>
			<xsl:when test="$input='RMS3B3'">
				<xsl:value-of select="'131'"/>
			</xsl:when>
			<xsl:when test="$input='RMS3B5'">
				<xsl:value-of select="'131'"/>
			</xsl:when>
			<xsl:when test="$input='RMS3B6'">
				<xsl:value-of select="'131'"/>
			</xsl:when>
			<xsl:when test="$input='RMS4A1'">
				<xsl:value-of select="'151'"/>
			</xsl:when>
			<xsl:when test="$input='RMS4A2'">
				<xsl:value-of select="'151'"/>
			</xsl:when>
			<xsl:when test="$input='RMS4A4'">
				<xsl:value-of select="'151'"/>
			</xsl:when>
			<xsl:when test="$input='RMS4A5'">
				<xsl:value-of select="'151'"/>
			</xsl:when>
			<xsl:when test="$input='RMS4B1'">
				<xsl:value-of select="'152'"/>
			</xsl:when>
			<xsl:when test="$input='RMS4B2'">
				<xsl:value-of select="'152'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'100'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf4_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='ATC'">
				<xsl:value-of select="'AIR'"/>
			</xsl:when>
			<xsl:when test="$input='ISO'">
				<xsl:value-of select="'AIR'"/>
			</xsl:when>
			<xsl:when test="$input='SIC'">
				<xsl:value-of select="'AIR'"/>
			</xsl:when>
			<xsl:when test="$input='RMS'">
				<xsl:value-of select="'AIR'"/>
			</xsl:when>
			<xsl:when test="$input='RMSIND'">
				<xsl:value-of select="'AIR'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'AIR'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf5_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='ATC0'">
				<xsl:value-of select="'300'"/>
			</xsl:when>
			<xsl:when test="$input='ATC1'">
				<xsl:value-of select="'302'"/>
			</xsl:when>
			<xsl:when test="$input='ATC2'">
				<xsl:value-of select="'306'"/>
			</xsl:when>
			<xsl:when test="$input='ATC3'">
				<xsl:value-of select="'304'"/>
			</xsl:when>
			<xsl:when test="$input='ATC4'">
				<xsl:value-of select="'305'"/>
			</xsl:when>
			<xsl:when test="$input='ATC5'">
				<xsl:value-of select="'312'"/>
			</xsl:when>
			<xsl:when test="$input='ATC6'">
				<xsl:value-of select="'313'"/>
			</xsl:when>
			<xsl:when test="$input='ATC7'">
				<xsl:value-of select="'314'"/>
			</xsl:when>
			<xsl:when test="$input='ATC8'">
				<xsl:value-of select="'315'"/>
			</xsl:when>
			<xsl:when test="$input='ATC9'">
				<xsl:value-of select="'316'"/>
			</xsl:when>
			<xsl:when test="$input='ATC10'">
				<xsl:value-of select="'317'"/>
			</xsl:when>
			<xsl:when test="$input='ATC11'">
				<xsl:value-of select="'318'"/>
			</xsl:when>
			<xsl:when test="$input='ATC12'">
				<xsl:value-of select="'322'"/>
			</xsl:when>
			<xsl:when test="$input='ATC13'">
				<xsl:value-of select="'323'"/>
			</xsl:when>
			<xsl:when test="$input='ATC14'">
				<xsl:value-of select="'324'"/>
			</xsl:when>
			<xsl:when test="$input='ATC15'">
				<xsl:value-of select="'325'"/>
			</xsl:when>
			<xsl:when test="$input='ATC16'">
				<xsl:value-of select="'326'"/>
			</xsl:when>
			<xsl:when test="$input='ATC17'">
				<xsl:value-of select="'327'"/>
			</xsl:when>
			<xsl:when test="$input='ATC18'">
				<xsl:value-of select="'328'"/>
			</xsl:when>
			<xsl:when test="$input='ATC19'">
				<xsl:value-of select="'329'"/>
			</xsl:when>
			<xsl:when test="$input='ATC20'">
				<xsl:value-of select="'373'"/>
			</xsl:when>
			<xsl:when test="$input='ATC21'">
				<xsl:value-of select="'330'"/>
			</xsl:when>
			<xsl:when test="$input='ATC22'">
				<xsl:value-of select="'341'"/>
			</xsl:when>
			<xsl:when test="$input='ATC23'">
				<xsl:value-of select="'343'"/>
			</xsl:when>
			<xsl:when test="$input='ATC24'">
				<xsl:value-of select="'344'"/>
			</xsl:when>
			<xsl:when test="$input='ATC25'">
				<xsl:value-of select="'346'"/>
			</xsl:when>
			<xsl:when test="$input='ATC26'">
				<xsl:value-of select="'351'"/>
			</xsl:when>
			<xsl:when test="$input='ATC27'">
				<xsl:value-of select="'352'"/>
			</xsl:when>
			<xsl:when test="$input='ATC28'">
				<xsl:value-of select="'353'"/>
			</xsl:when>
			<xsl:when test="$input='ATC29'">
				<xsl:value-of select="'354'"/>
			</xsl:when>
			<xsl:when test="$input='ATC30'">
				<xsl:value-of select="'361'"/>
			</xsl:when>
			<xsl:when test="$input='ATC31'">
				<xsl:value-of select="'362'"/>
			</xsl:when>
			<xsl:when test="$input='ATC32'">
				<xsl:value-of select="'363'"/>
			</xsl:when>
			<xsl:when test="$input='ATC33'">
				<xsl:value-of select="'364'"/>
			</xsl:when>
			<xsl:when test="$input='ATC34'">
				<xsl:value-of select="'365'"/>
			</xsl:when>
			<xsl:when test="$input='ATC35'">
				<xsl:value-of select="'371'"/>
			</xsl:when>
			<xsl:when test="$input='ATC36'">
				<xsl:value-of select="'372'"/>
			</xsl:when>
			<xsl:when test="$input='ATC37'">
				<xsl:value-of select="'311'"/>
			</xsl:when>
			<xsl:when test="$input='ATC38'">
				<xsl:value-of select="'321'"/>
			</xsl:when>
			<xsl:when test="$input='ATC39'">
				<xsl:value-of select="'300'"/>
			</xsl:when>
			<xsl:when test="$input='ATC40'">
				<xsl:value-of select="'302'"/>
			</xsl:when>
			<xsl:when test="$input='ATC41'">
				<xsl:value-of select="'302'"/>
			</xsl:when>
			<xsl:when test="$input='ISO0'">
				<xsl:value-of select="'300'"/>
			</xsl:when>
			<xsl:when test="$input='ISO1'">
				<xsl:value-of select="'302'"/>
			</xsl:when>
			<xsl:when test="$input='ISO2'">
				<xsl:value-of select="'306'"/>
			</xsl:when>
			<xsl:when test="$input='ISO3'">
				<xsl:value-of select="'328'"/>
			</xsl:when>
			<xsl:when test="$input='ISO4'">
				<xsl:value-of select="'304'"/>
			</xsl:when>
			<xsl:when test="$input='ISO5'">
				<xsl:value-of select="'321'"/>
			</xsl:when>
			<xsl:when test="$input='ISO6'">
				<xsl:value-of select="'305'"/>
			</xsl:when>
			<xsl:when test="$input='ISO7'">
				<xsl:value-of select="'311'"/>
			</xsl:when>
			<xsl:when test="$input='ISO8'">
				<xsl:value-of select="'315'"/>
			</xsl:when>
			<xsl:when test="$input='ISO9'">
				<xsl:value-of select="'314'"/>
			</xsl:when>
			<xsl:when test="$input='ATC47'">
				<xsl:value-of select="'331'"/>
			</xsl:when>
			<xsl:when test="$input='ATC42'">
				<xsl:value-of select="'306'"/>
			</xsl:when>
			<xsl:when test="$input='ATC43'">
				<xsl:value-of select="'306'"/>
			</xsl:when>
			<xsl:when test="$input='ATC44'">
				<xsl:value-of select="'335'"/>
			</xsl:when>
			<xsl:when test="$input='ATC48'">
				<xsl:value-of select="'304'"/>
			</xsl:when>
			<xsl:when test="$input='ATC49'">
				<xsl:value-of select="'316'"/>
			</xsl:when>
			<xsl:when test="$input='ATC50'">
				<xsl:value-of select="'316'"/>
			</xsl:when>
			<xsl:when test="$input='ATC51'">
				<xsl:value-of select="'304'"/>
			</xsl:when>
			<xsl:when test="$input='ATC52'">
				<xsl:value-of select="'304'"/>
			</xsl:when>
			<xsl:when test="$input='ATC53'">
				<xsl:value-of select="'311'"/>
			</xsl:when>
			<xsl:when test="$input='ATC54'">
				<xsl:value-of select="'345'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'300'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf6_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='0'">
				<xsl:value-of select="'0'"/>
			</xsl:when>
			<xsl:when test="$input='1'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='2'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='3'">
				<xsl:value-of select="'3'"/>
			</xsl:when>
			<xsl:when test="$input='4'">
				<xsl:value-of select="'3'"/>
			</xsl:when>
			<xsl:when test="$input='5'">
				<xsl:value-of select="'2'"/>
			</xsl:when>
			<xsl:when test="$input='6'">
				<xsl:value-of select="'2'"/>
			</xsl:when>
			<xsl:when test="$input='7'">
				<xsl:value-of select="'8'"/>
			</xsl:when>
			<xsl:when test="$input='8'">
				<xsl:value-of select="'8'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf7_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='0'">
				<xsl:value-of select="'0'"/>
			</xsl:when>
			<xsl:when test="$input='1'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='2'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='3'">
				<xsl:value-of select="'2'"/>
			</xsl:when>
			<xsl:when test="$input='4'">
				<xsl:value-of select="'3'"/>
			</xsl:when>
			<xsl:when test="$input='5'">
				<xsl:value-of select="'2'"/>
			</xsl:when>
			<xsl:when test="$input='6'">
				<xsl:value-of select="'3'"/>
			</xsl:when>
			<xsl:when test="$input='7'">
				<xsl:value-of select="'2'"/>
			</xsl:when>
			<xsl:when test="$input='8'">
				<xsl:value-of select="'3'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf8_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='0'">
				<xsl:value-of select="'0'"/>
			</xsl:when>
			<xsl:when test="$input='1'">
				<xsl:value-of select="'4'"/>
			</xsl:when>
			<xsl:when test="$input='2'">
				<xsl:value-of select="'4'"/>
			</xsl:when>
			<xsl:when test="$input='3'">
				<xsl:value-of select="'0'"/>
			</xsl:when>
			<xsl:when test="$input='4'">
				<xsl:value-of select="'0'"/>
			</xsl:when>
			<xsl:when test="$input='5'">
				<xsl:value-of select="'3'"/>
			</xsl:when>
			<xsl:when test="$input='6'">
				<xsl:value-of select="'2'"/>
			</xsl:when>
			<xsl:when test="$input='7'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='8'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='9'">
				<xsl:value-of select="'11'"/>
			</xsl:when>
			<xsl:when test="$input='10'">
				<xsl:value-of select="'11'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf9_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='0'">
				<xsl:value-of select="'0'"/>
			</xsl:when>
			<xsl:when test="$input='1'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='2'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='3'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='4'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='5'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='6'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf10_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='1'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='2'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='3'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='4'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='5'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='6'">
				<xsl:value-of select="'2'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf11_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='0'">
				<xsl:value-of select="'0'"/>
			</xsl:when>
			<xsl:when test="$input='1'">
				<xsl:value-of select="'7'"/>
			</xsl:when>
			<xsl:when test="$input='2'">
				<xsl:value-of select="'6'"/>
			</xsl:when>
			<xsl:when test="$input='3'">
				<xsl:value-of select="'5'"/>
			</xsl:when>
			<xsl:when test="$input='4'">
				<xsl:value-of select="'4'"/>
			</xsl:when>
			<xsl:when test="$input='5'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf12_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='0'">
				<xsl:value-of select="'0'"/>
			</xsl:when>
			<xsl:when test="$input='1'">
				<xsl:value-of select="'5'"/>
			</xsl:when>
			<xsl:when test="$input='2'">
				<xsl:value-of select="'5'"/>
			</xsl:when>
			<xsl:when test="$input='3'">
				<xsl:value-of select="'6'"/>
			</xsl:when>
			<xsl:when test="$input='4'">
				<xsl:value-of select="'7'"/>
			</xsl:when>
			<xsl:when test="$input='5'">
				<xsl:value-of select="'7'"/>
			</xsl:when>
			<xsl:when test="$input='6'">
				<xsl:value-of select="'7'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf13_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='0'">
				<xsl:value-of select="'0'"/>
			</xsl:when>
			<xsl:when test="$input='1'">
				<xsl:value-of select="'2'"/>
			</xsl:when>
			<xsl:when test="$input='2'">
				<xsl:value-of select="'7'"/>
			</xsl:when>
			<xsl:when test="$input='3'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='4'">
				<xsl:value-of select="'8'"/>
			</xsl:when>
			<xsl:when test="$input='5'">
				<xsl:value-of select="'8'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf14_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='0'">
				<xsl:value-of select="'0'"/>
			</xsl:when>
			<xsl:when test="$input='1'">
				<xsl:value-of select="'2012'"/>
			</xsl:when>
			<xsl:when test="$input='2'">
				<xsl:value-of select="'2007'"/>
			</xsl:when>
			<xsl:when test="$input='3'">
				<xsl:value-of select="'2000'"/>
			</xsl:when>
			<xsl:when test="$input='4'">
				<xsl:value-of select="'1970'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf15_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='0'">
				<xsl:value-of select="'0'"/>
			</xsl:when>
			<xsl:when test="$input='1'">
				<xsl:value-of select="'3'"/>
			</xsl:when>
			<xsl:when test="$input='2'">
				<xsl:value-of select="'4'"/>
			</xsl:when>
			<xsl:when test="$input='3'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='4'">
				<xsl:value-of select="'3'"/>
			</xsl:when>
			<xsl:when test="$input='5'">
				<xsl:value-of select="'4'"/>
			</xsl:when>
			<xsl:when test="$input='6'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='7'">
				<xsl:value-of select="'5'"/>
			</xsl:when>
			<xsl:when test="$input='8'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:when test="$input='9'">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf16_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='0'">
				<xsl:value-of select="'0'"/>
			</xsl:when>
			<xsl:when test="$input='1'">
				<xsl:value-of select="'3'"/>
			</xsl:when>
			<xsl:when test="$input='2'">
				<xsl:value-of select="'4'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf17_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='8'">
				<xsl:value-of select="'12'"/>
			</xsl:when>
			<xsl:when test="$input='10'">
				<xsl:value-of select="'12'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf18_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='1'">
				<xsl:value-of select="'4'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template name="agt:MapToModelLocARA_var49_function">
		<xsl:param name="var48_current"/>
		<xsl:variable name="var46_resultof_cast" select="string('1')"/>
		<xsl:variable name="var47_resultof_cast" select="string('0')"/>
		<xsl:variable name="var34_ROOFSYS">
			<xsl:if test="$var48_current/@ROOFSYS">
				<xsl:value-of select="'1'"/>
			</xsl:if>
		</xsl:variable>
		<xsl:variable name="var35_resultof_exists" select="boolean(string($var34_ROOFSYS))"/>
		<xsl:variable name="var36_OCCSCHEME">
			<xsl:if test="$var48_current/@OCCSCHEME">
				<xsl:value-of select="'1'"/>
			</xsl:if>
		</xsl:variable>
		<xsl:variable name="var37_resultof_exists" select="boolean(string($var36_OCCSCHEME))"/>
		<xsl:variable name="var38_ROOFGEOM">
			<xsl:if test="$var48_current/@ROOFGEOM">
				<xsl:value-of select="'1'"/>
			</xsl:if>
		</xsl:variable>
		<xsl:variable name="var39_resultof_exists" select="boolean(string($var38_ROOFGEOM))"/>
		<xsl:variable name="var40_CLADRATE">
			<xsl:if test="$var48_current/@CLADRATE">
				<xsl:value-of select="'1'"/>
			</xsl:if>
		</xsl:variable>
		<xsl:variable name="var41_resultof_exists" select="boolean(string($var40_CLADRATE))"/>
		<xsl:variable name="var42_BLDGSCHEME">
			<xsl:if test="$var48_current/@BLDGSCHEME">
				<xsl:value-of select="'1'"/>
			</xsl:if>
		</xsl:variable>
		<xsl:variable name="var43_resultof_exists" select="boolean(string($var42_BLDGSCHEME))"/>
		<xsl:variable name="var44_ROWID">
			<xsl:if test="$var48_current/@ROW_ID">
				<xsl:value-of select="'1'"/>
			</xsl:if>
		</xsl:variable>
		<xsl:variable name="var45_resultof_exists" select="boolean(string($var44_ROWID))"/>
		<rec>
			<xsl:attribute name="RecTypeCode60">
				<xsl:value-of select="string('60')"/>
			</xsl:attribute>
			<xsl:attribute name="PolID60">
				<xsl:value-of select="$var46_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Name60">X</xsl:attribute>
			<xsl:attribute name="Address60">X</xsl:attribute>
			<xsl:attribute name="UDF1">X</xsl:attribute>
			<xsl:attribute name="UDF2">X</xsl:attribute>
			<xsl:attribute name="UDF3">X</xsl:attribute>
			<xsl:attribute name="UDF4">X</xsl:attribute>
			<xsl:attribute name="UDF5">X</xsl:attribute>
			<xsl:attribute name="InsuredIDType">X</xsl:attribute>
			<xsl:attribute name="InsuredID"></xsl:attribute>
			<xsl:attribute name="EffFrom60"></xsl:attribute>
			<xsl:attribute name="EffTo60"></xsl:attribute>
			<xsl:attribute name="Currency60">USD</xsl:attribute>
			<xsl:attribute name="ExchRate60">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="UserLOB">X</xsl:attribute>
			<xsl:attribute name="Peril60">PWH</xsl:attribute>
			<xsl:attribute name="PolForm">X</xsl:attribute>
			<xsl:attribute name="Status">B</xsl:attribute>
			<xsl:attribute name="ContractType">PP</xsl:attribute>
			<xsl:attribute name="RecTypeCode63">
				<xsl:value-of select="string('63')"/>
			</xsl:attribute>
			<xsl:attribute name="PolID63">
				<xsl:value-of select="$var46_resultof_cast"/>
			</xsl:attribute>
			<xsl:if test="string($var45_resultof_exists) != 'false'">
				<xsl:attribute name="LocID63">
					<xsl:value-of select="string($var48_current/@ROW_ID)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:attribute name="ISOBIN">X</xsl:attribute>
			<xsl:attribute name="Name63">X</xsl:attribute>
			<xsl:attribute name="Address63">X</xsl:attribute>
			<xsl:attribute name="City">X</xsl:attribute>
			<xsl:attribute name="AreaScheme">
				<xsl:value-of select="string('1003')"/>
			</xsl:attribute>
			<xsl:variable name="var1_STATECODE">
				<xsl:if test="$var48_current/@STATECODE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="Area">
				<xsl:call-template name="vmf:vmf1_inputtoresult">
					<xsl:with-param name="input">
						<xsl:choose>
							<xsl:when test="string(boolean(string($var1_STATECODE))) != 'false'">
								<xsl:value-of select="string($var48_current/@STATECODE)"/>
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="'X'"/>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:with-param>
				</xsl:call-template>
			</xsl:attribute>
			<xsl:variable name="var2_COUNTYCODE">
				<xsl:if test="$var48_current/@COUNTYCODE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="SubArea">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var2_COUNTYCODE))) != 'false'">
						<xsl:value-of select="string($var48_current/@COUNTYCODE)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$var47_resultof_cast"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var3_POSTALCODE">
				<xsl:if test="$var48_current/@POSTALCODE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="PostalArea">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var3_POSTALCODE))) != 'false'">
						<xsl:value-of select="string($var48_current/@POSTALCODE)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="'X'"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:attribute name="Country">01</xsl:attribute>
			<xsl:variable name="var4_LATITUDE">
				<xsl:if test="$var48_current/@LATITUDE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="GeoLat">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var4_LATITUDE))) != 'false'">
						<xsl:value-of select="string($var48_current/@LATITUDE)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$var47_resultof_cast"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var5_LONGITUDE">
				<xsl:if test="$var48_current/@LONGITUDE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="GeoLong">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var5_LONGITUDE))) != 'false'">
						<xsl:value-of select="string($var48_current/@LONGITUDE)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$var47_resultof_cast"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:attribute name="EffFrom">
				<xsl:value-of select="string('20150901')"/>
			</xsl:attribute>
			<xsl:attribute name="EffTo">20160901</xsl:attribute>
			<xsl:attribute name="Currency">USD</xsl:attribute>
			<xsl:attribute name="ExchRate">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:variable name="var6_NUMBLDGS">
				<xsl:if test="$var48_current/@NUMBLDGS">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var6_NUMBLDGS))) != 'false'">
				<xsl:attribute name="RiskCount">
					<xsl:value-of select="string($var48_current/@NUMBLDGS)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:attribute name="RepValBldg">
				<xsl:value-of select="$var46_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="RepValOStr">
				<xsl:value-of select="$var46_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="RepValCont">
				<xsl:value-of select="$var46_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="RepValTime">
				<xsl:value-of select="$var46_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="RVDaysCovered">
				<xsl:value-of select="string('365')"/>
			</xsl:attribute>
			<xsl:attribute name="Premium">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:if test="string($var43_resultof_exists) != 'false'">
				<xsl:attribute name="ConType">
					<xsl:call-template name="vmf:vmf2_inputtoresult">
						<xsl:with-param name="input" select="string($var48_current/@BLDGSCHEME)"/>
					</xsl:call-template>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var7_BLDGCLASS">
				<xsl:if test="$var48_current/@BLDGCLASS">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string($var43_resultof_exists) != 'false'">
				<xsl:if test="string(boolean(string($var7_BLDGCLASS))) != 'false'">
					<xsl:attribute name="ConBldg">
						<xsl:call-template name="vmf:vmf3_inputtoresult">
							<xsl:with-param name="input" select="concat(string($var48_current/@BLDGSCHEME), string($var48_current/@BLDGCLASS))"/>
						</xsl:call-template>
					</xsl:attribute>
				</xsl:if>
			</xsl:if>
			<xsl:variable name="var8_BLDGCLASS">
				<xsl:if test="$var48_current/@BLDGCLASS">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string($var43_resultof_exists) != 'false'">
				<xsl:if test="string(boolean(string($var8_BLDGCLASS))) != 'false'">
					<xsl:attribute name="ConOStr">
						<xsl:call-template name="vmf:vmf3_inputtoresult">
							<xsl:with-param name="input" select="concat(string($var48_current/@BLDGSCHEME), string($var48_current/@BLDGCLASS))"/>
						</xsl:call-template>
					</xsl:attribute>
				</xsl:if>
			</xsl:if>
			<xsl:attribute name="DamageModFactor">
				<xsl:value-of select="$var46_resultof_cast"/>
			</xsl:attribute>
			<xsl:if test="string($var37_resultof_exists) != 'false'">
				<xsl:attribute name="OccType">
					<xsl:call-template name="vmf:vmf4_inputtoresult">
						<xsl:with-param name="input" select="string($var48_current/@OCCSCHEME)"/>
					</xsl:call-template>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var9_OCCTYPE">
				<xsl:if test="$var48_current/@OCCTYPE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string($var37_resultof_exists) != 'false'">
				<xsl:if test="string(boolean(string($var9_OCCTYPE))) != 'false'">
					<xsl:attribute name="Occ">
						<xsl:call-template name="vmf:vmf5_inputtoresult">
							<xsl:with-param name="input" select="concat(string($var48_current/@OCCSCHEME), string($var48_current/@OCCTYPE))"/>
						</xsl:call-template>
					</xsl:attribute>
				</xsl:if>
			</xsl:if>
			<xsl:variable name="var10_YEARUPGRAD">
				<xsl:if test="$var48_current/@YEARUPGRAD">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:variable name="var11_YEARBUILT">
				<xsl:if test="$var48_current/@YEARBUILT">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:variable name="var20_resultof_cast" select="string('9999')"/>
			<xsl:variable name="var18_resultof_cast" select="string($var48_current/@YEARUPGRAD)"/>
			<xsl:variable name="var19_resultof_cast" select="string($var48_current/@YEARBUILT)"/>
			<xsl:variable name="var16_resultof_substring" select="substring($var18_resultof_cast, (string-length($var18_resultof_cast) - '3'), '4')"/>
			<xsl:variable name="var17_resultof_substring" select="substring($var19_resultof_cast, (string-length($var19_resultof_cast) - '3'), '4')"/>
			<xsl:variable name="var14_resultof_contains" select="contains($var16_resultof_substring, $var20_resultof_cast)"/>
			<xsl:variable name="var15_resultof_contains" select="contains($var17_resultof_substring, $var20_resultof_cast)"/>
			<xsl:variable name="var12_result">
				<xsl:choose>
					<xsl:when test="string($var14_resultof_contains) != 'false'">
						<xsl:value-of select="$var47_resultof_cast"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$var16_resultof_substring"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>
			<xsl:variable name="var13_result">
				<xsl:choose>
					<xsl:when test="string($var15_resultof_contains) != 'false'">
						<xsl:value-of select="$var47_resultof_cast"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$var17_resultof_substring"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var10_YEARUPGRAD))) != 'false'">
				<xsl:if test="string(boolean(string($var11_YEARBUILT))) != 'false'">
					<xsl:attribute name="YearBuilt">
						<xsl:choose>
							<xsl:when test="string(($var12_result &gt;= $var13_result)) != 'false'">
								<xsl:choose>
									<xsl:when test="string($var14_resultof_contains) != 'false'">
										<xsl:value-of select="$var47_resultof_cast"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="$var16_resultof_substring"/>
									</xsl:otherwise>
								</xsl:choose>
							</xsl:when>
							<xsl:when test="string($var15_resultof_contains) != 'false'">
								<xsl:value-of select="$var47_resultof_cast"/>
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="$var17_resultof_substring"/>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:attribute>
				</xsl:if>
			</xsl:if>
			<xsl:variable name="var21_NUMSTORIES">
				<xsl:if test="$var48_current/@NUMSTORIES">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="Stories">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var21_NUMSTORIES))) != 'false'">
						<xsl:value-of select="string($var48_current/@NUMSTORIES)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$var47_resultof_cast"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:attribute name="GRCBldg">
				<xsl:value-of select="$var46_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="GRCCont">
				<xsl:value-of select="$var46_resultof_cast"/>
			</xsl:attribute>
			<xsl:variable name="var22_FLOORAREA">
				<xsl:if test="$var48_current/@FLOORAREA">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var22_FLOORAREA))) != 'false'">
				<xsl:attribute name="GrossArea">
					<xsl:value-of select="string($var48_current/@FLOORAREA)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:attribute name="PerilCount">
				<xsl:value-of select="$var46_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Peril">PWH</xsl:attribute>
			<xsl:attribute name="LimitType">C</xsl:attribute>
			<xsl:attribute name="Limit1">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Limit2">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Limit3">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Limit4">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Participation">
				<xsl:value-of select="$var46_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Participation2">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="DedType">SA</xsl:attribute>
			<xsl:attribute name="Ded1">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Ded2">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Ded3">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Ded4">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Territory">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="SublimitArea">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="ReinsCount">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="ReinsOrder"></xsl:attribute>
			<xsl:attribute name="ReinsType"></xsl:attribute>
			<xsl:attribute name="ReinsCID"></xsl:attribute>
			<xsl:attribute name="Reinsfield1"></xsl:attribute>
			<xsl:attribute name="Reinsfield2"></xsl:attribute>
			<xsl:attribute name="Reinsfield3">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Reinsfield4"></xsl:attribute>
			<xsl:attribute name="RecTypeCode64">
				<xsl:value-of select="string('64')"/>
			</xsl:attribute>
			<xsl:attribute name="PolID64">
				<xsl:value-of select="$var46_resultof_cast"/>
			</xsl:attribute>
			<xsl:if test="string($var45_resultof_exists) != 'false'">
				<xsl:attribute name="LocID64">
					<xsl:value-of select="string($var48_current/@ROW_ID)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:attribute name="SealApprove">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrFloorOfInterest">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrBldCond">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Pounding">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrTreeExposure">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrSmallDebris">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrLargeMissile">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrTerrainRoughness">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrAdBldHeight">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrBldOrientation">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrShape">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrTorsion">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrSoftStory">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrStrucIrreg">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrSpecial">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrRetrofit">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:if test="string($var39_resultof_exists) != 'false'">
				<xsl:attribute name="IrRoofGeometry">
					<xsl:call-template name="vmf:vmf6_inputtoresult">
						<xsl:with-param name="input" select="string($var48_current/@ROOFGEOM)"/>
					</xsl:call-template>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($var39_resultof_exists) != 'false'">
				<xsl:attribute name="IrRoofPitch">
					<xsl:call-template name="vmf:vmf7_inputtoresult">
						<xsl:with-param name="input" select="string($var48_current/@ROOFGEOM)"/>
					</xsl:call-template>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($var35_resultof_exists) != 'false'">
				<xsl:attribute name="IrRoofCover">
					<xsl:call-template name="vmf:vmf8_inputtoresult">
						<xsl:with-param name="input" select="string($var48_current/@ROOFSYS)"/>
					</xsl:call-template>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var26_resultof_cast" select="string($var48_current/@CLADRATE)"/>
			<xsl:variable name="var24_resultof_vmf__inputtoresult">
				<xsl:call-template name="vmf:vmf9_inputtoresult">
					<xsl:with-param name="input" select="$var26_resultof_cast"/>
				</xsl:call-template>
			</xsl:variable>
			<xsl:variable name="var25_resultof_equal" select="('1' = $var24_resultof_vmf__inputtoresult)"/>
			<xsl:variable name="var23_ROOFFRAME">
				<xsl:if test="$var48_current/@ROOFFRAME">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string($var41_resultof_exists) != 'false'">
				<xsl:if test="string(($var25_resultof_equal or boolean(string($var23_ROOFFRAME)))) != 'false'">
					<xsl:attribute name="IrRoofDeck">
						<xsl:choose>
							<xsl:when test="string($var25_resultof_equal) != 'false'">
								<xsl:call-template name="vmf:vmf10_inputtoresult">
									<xsl:with-param name="input" select="$var26_resultof_cast"/>
								</xsl:call-template>
							</xsl:when>
							<xsl:otherwise>
								<xsl:call-template name="vmf:vmf11_inputtoresult">
									<xsl:with-param name="input" select="string($var48_current/@ROOFFRAME)"/>
								</xsl:call-template>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:attribute>
				</xsl:if>
			</xsl:if>
			<xsl:attribute name="IrRoofCoverAttch">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:if test="string($var41_resultof_exists) != 'false'">
				<xsl:attribute name="IrRoofDeckAttch">
					<xsl:call-template name="vmf:vmf12_inputtoresult">
						<xsl:with-param name="input" select="string($var48_current/@CLADRATE)"/>
					</xsl:call-template>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var27_ROOFANCH">
				<xsl:if test="$var48_current/@ROOFANCH">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var27_ROOFANCH))) != 'false'">
				<xsl:attribute name="IrRoofAnchorage">
					<xsl:call-template name="vmf:vmf13_inputtoresult">
						<xsl:with-param name="input" select="string($var48_current/@ROOFANCH)"/>
					</xsl:call-template>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var28_ROOFAGE">
				<xsl:if test="$var48_current/@ROOFAGE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var28_ROOFAGE))) != 'false'">
				<xsl:attribute name="IrRoofBuilt">
					<xsl:call-template name="vmf:vmf14_inputtoresult">
						<xsl:with-param name="input" select="string($var48_current/@ROOFAGE)"/>
					</xsl:call-template>
				</xsl:attribute>
			</xsl:if>
			<xsl:attribute name="IrWall">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrWallSiding">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrGlassType">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrGlassPercent">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:variable name="var29_RESISTOPEN">
				<xsl:if test="$var48_current/@RESISTOPEN">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var29_RESISTOPEN))) != 'false'">
				<xsl:attribute name="IrWindowProt">
					<xsl:call-template name="vmf:vmf15_inputtoresult">
						<xsl:with-param name="input" select="string($var48_current/@RESISTOPEN)"/>
					</xsl:call-template>
				</xsl:attribute>
			</xsl:if>
			<xsl:attribute name="IrExteriorDoors">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:variable name="var30_FOUNDSYS">
				<xsl:if test="$var48_current/@FOUNDSYS">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var30_FOUNDSYS))) != 'false'">
				<xsl:attribute name="IrBldFndConn">
					<xsl:call-template name="vmf:vmf16_inputtoresult">
						<xsl:with-param name="input" select="string($var48_current/@FOUNDSYS)"/>
					</xsl:call-template>
				</xsl:attribute>
			</xsl:if>
			<xsl:attribute name="IrFoundation">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrIntPartition">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrAttachStruct">
				<xsl:value-of select="string('8')"/>
			</xsl:attribute>
			<xsl:attribute name="IrAppurtStruct">
				<xsl:value-of select="string('6')"/>
			</xsl:attribute>
			<xsl:variable name="var33_resultof_cast" select="string('12')"/>
			<xsl:variable name="var31_resultof_vmf___inputtoresult">
				<xsl:call-template name="vmf:vmf17_inputtoresult">
					<xsl:with-param name="input" select="string($var48_current/@ROOFSYS)"/>
				</xsl:call-template>
			</xsl:variable>
			<xsl:variable name="var32_resultof_equal" select="($var31_resultof_vmf___inputtoresult = $var33_resultof_cast)"/>
			<xsl:if test="string($var35_resultof_exists) != 'false'">
				<xsl:if test="string(($var32_resultof_equal or $var39_resultof_exists)) != 'false'">
					<xsl:attribute name="IrMechSystem">
						<xsl:choose>
							<xsl:when test="string($var32_resultof_equal) != 'false'">
								<xsl:value-of select="$var33_resultof_cast"/>
							</xsl:when>
							<xsl:otherwise>
								<xsl:call-template name="vmf:vmf18_inputtoresult">
									<xsl:with-param name="input" select="string($var48_current/@ROOFGEOM)"/>
								</xsl:call-template>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:attribute>
				</xsl:if>
			</xsl:if>
			<xsl:attribute name="ShortColumn">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="BigExtOpnh">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Omamentation">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Equipment">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="WaterHeater">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Redundancy">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="BrickVeneer">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="TallOne-Story">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Tanks">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Chimney">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="ColumnBasement">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Multi-StoryHall">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Lattice">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Welding">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="TransitioninSRC">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="ColdFormedTube">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="ISValue">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="CustomFloodZone">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="CustomFloodStandardofProtection">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="ProjectPhase">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="ProjectCompletion">
				<xsl:value-of select="$var47_resultof_cast"/>
			</xsl:attribute>
		</rec>
	</xsl:template>
	<xsl:template name="agt:MapToModelLocARA_var51_resultof_map">
		<xsl:param name="var50_current"/>
		<xsl:for-each select="$var50_current/rec">
			<xsl:call-template name="agt:MapToModelLocARA_var49_function">
				<xsl:with-param name="var48_current" select="."/>
			</xsl:call-template>
		</xsl:for-each>
	</xsl:template>
	<xsl:template match="/">
		<root>
			<xsl:attribute name="xsi:noNamespaceSchemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance">C:/Users/Administrator/Desktop/git/ARA/flamingo/hurloss/Files/ValidationFiles/ModelLocARA.xsd</xsl:attribute>
			<xsl:for-each select="root">
				<xsl:call-template name="agt:MapToModelLocARA_var51_resultof_map">
					<xsl:with-param name="var50_current" select="."/>
				</xsl:call-template>
			</xsl:for-each>
		</root>
	</xsl:template>
</xsl:stylesheet>
