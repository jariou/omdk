<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2015r4

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:vmf="http://www.altova.com/MapForce/UDF/vmf" xmlns:agt="http://www.altova.com/Mapforce/agt" xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="vmf agt xs">
	<xsl:template name="vmf:vmf1_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='ME'">
				<xsl:value-of select="'13'"/>
			</xsl:when>
			<xsl:when test="$input='NH'">
				<xsl:value-of select="'33'"/>
			</xsl:when>
			<xsl:when test="$input='VT'">
				<xsl:value-of select="'50'"/>
			</xsl:when>
			<xsl:when test="$input='MA'">
				<xsl:value-of select="'25'"/>
			</xsl:when>
			<xsl:when test="$input='RI'">
				<xsl:value-of select="'44'"/>
			</xsl:when>
			<xsl:when test="$input='CT'">
				<xsl:value-of select="'09'"/>
			</xsl:when>
			<xsl:when test="$input='NY'">
				<xsl:value-of select="'36'"/>
			</xsl:when>
			<xsl:when test="$input='NJ'">
				<xsl:value-of select="'34'"/>
			</xsl:when>
			<xsl:when test="$input='PA'">
				<xsl:value-of select="'42'"/>
			</xsl:when>
			<xsl:when test="$input='DE'">
				<xsl:value-of select="'10'"/>
			</xsl:when>
			<xsl:when test="$input='MD'">
				<xsl:value-of select="'24'"/>
			</xsl:when>
			<xsl:when test="$input='DC'">
				<xsl:value-of select="'11'"/>
			</xsl:when>
			<xsl:when test="$input='WV'">
				<xsl:value-of select="'54'"/>
			</xsl:when>
			<xsl:when test="$input='VA'">
				<xsl:value-of select="'51'"/>
			</xsl:when>
			<xsl:when test="$input='NC'">
				<xsl:value-of select="'37'"/>
			</xsl:when>
			<xsl:when test="$input='SC'">
				<xsl:value-of select="'45'"/>
			</xsl:when>
			<xsl:when test="$input='GA'">
				<xsl:value-of select="'13'"/>
			</xsl:when>
			<xsl:when test="$input='FL'">
				<xsl:value-of select="'12'"/>
			</xsl:when>
			<xsl:when test="$input='AL'">
				<xsl:value-of select="'01'"/>
			</xsl:when>
			<xsl:when test="$input='MS'">
				<xsl:value-of select="'28'"/>
			</xsl:when>
			<xsl:when test="$input='LA'">
				<xsl:value-of select="'22'"/>
			</xsl:when>
			<xsl:when test="$input='TX'">
				<xsl:value-of select="'48'"/>
			</xsl:when>
			<xsl:when test="$input='X'">
				<xsl:value-of select="'00'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'00'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template name="agt:MapToModelLocARA_Cede_var26_function">
		<xsl:param name="var25_current"/>
		<xsl:variable name="var23_resultof_cast" select="string('1')"/>
		<xsl:variable name="var24_resultof_cast" select="string('0')"/>
		<xsl:variable name="var21_ROWID">
			<xsl:if test="$var25_current/@ROW_ID">
				<xsl:value-of select="'1'"/>
			</xsl:if>
		</xsl:variable>
		<xsl:variable name="var22_resultof_exists" select="boolean(string($var21_ROWID))"/>
		<rec>
			<xsl:attribute name="RecTypeCode60">
				<xsl:value-of select="string('60')"/>
			</xsl:attribute>
			<xsl:attribute name="PolID60">
				<xsl:value-of select="$var23_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Name60">X</xsl:attribute>
			<xsl:attribute name="Address60">X</xsl:attribute>
			<xsl:attribute name="UDF1">X</xsl:attribute>
			<xsl:attribute name="UDF2">X</xsl:attribute>
			<xsl:attribute name="UDF3">X</xsl:attribute>
			<xsl:attribute name="UDF4">X</xsl:attribute>
			<xsl:attribute name="UDF5">X</xsl:attribute>
			<xsl:attribute name="InsuredIDType">X</xsl:attribute>
			<xsl:attribute name="InsuredID"></xsl:attribute>
			<xsl:attribute name="EffFrom60"></xsl:attribute>
			<xsl:attribute name="EffTo60"></xsl:attribute>
			<xsl:attribute name="Currency60">USD</xsl:attribute>
			<xsl:attribute name="ExchRate60">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="UserLOB">X</xsl:attribute>
			<xsl:attribute name="Peril60">PWH</xsl:attribute>
			<xsl:attribute name="PolForm">X</xsl:attribute>
			<xsl:attribute name="Status">B</xsl:attribute>
			<xsl:attribute name="ContractType">PP</xsl:attribute>
			<xsl:attribute name="RecTypeCode63">
				<xsl:value-of select="string('63')"/>
			</xsl:attribute>
			<xsl:attribute name="PolID63">
				<xsl:value-of select="$var23_resultof_cast"/>
			</xsl:attribute>
			<xsl:if test="string($var22_resultof_exists) != 'false'">
				<xsl:attribute name="LocID63">
					<xsl:value-of select="string($var25_current/@ROW_ID)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:attribute name="ISOBIN">X</xsl:attribute>
			<xsl:attribute name="Name63">X</xsl:attribute>
			<xsl:attribute name="Address63">X</xsl:attribute>
			<xsl:attribute name="City">X</xsl:attribute>
			<xsl:attribute name="AreaScheme">
				<xsl:value-of select="string('1003')"/>
			</xsl:attribute>
			<xsl:variable name="var1_AreaCode">
				<xsl:if test="$var25_current/@AreaCode">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var1_AreaCode))) != 'false'">
				<xsl:attribute name="Area">
					<xsl:call-template name="vmf:vmf1_inputtoresult">
						<xsl:with-param name="input" select="string($var25_current/@AreaCode)"/>
					</xsl:call-template>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var2_SubareaCode">
				<xsl:if test="$var25_current/@SubareaCode">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var2_SubareaCode))) != 'false'">
				<xsl:attribute name="SubArea">
					<xsl:value-of select="string($var25_current/@SubareaCode)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var3_PostalCode">
				<xsl:if test="$var25_current/@PostalCode">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var3_PostalCode))) != 'false'">
				<xsl:attribute name="PostalArea">
					<xsl:value-of select="string($var25_current/@PostalCode)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:attribute name="Country">01</xsl:attribute>
			<xsl:variable name="var4_Latitude">
				<xsl:if test="$var25_current/@Latitude">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var4_Latitude))) != 'false'">
				<xsl:attribute name="GeoLat">
					<xsl:value-of select="string($var25_current/@Latitude)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var5_Longitude">
				<xsl:if test="$var25_current/@Longitude">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var5_Longitude))) != 'false'">
				<xsl:attribute name="GeoLong">
					<xsl:value-of select="string($var25_current/@Longitude)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:attribute name="EffFrom">
				<xsl:value-of select="string('20150901')"/>
			</xsl:attribute>
			<xsl:attribute name="EffTo">20160901</xsl:attribute>
			<xsl:attribute name="Currency">USD</xsl:attribute>
			<xsl:attribute name="ExchRate">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:variable name="var6_RiskCount">
				<xsl:if test="$var25_current/@RiskCount">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var6_RiskCount))) != 'false'">
				<xsl:attribute name="RiskCount">
					<xsl:value-of select="string($var25_current/@RiskCount)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:attribute name="RepValBldg">
				<xsl:value-of select="$var23_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="RepValOStr">
				<xsl:value-of select="$var23_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="RepValCont">
				<xsl:value-of select="$var23_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="RepValTime">
				<xsl:value-of select="$var23_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="RVDaysCovered">
				<xsl:value-of select="string('365')"/>
			</xsl:attribute>
			<xsl:attribute name="Premium">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="ConType">AIR</xsl:attribute>
			<xsl:variable name="var7_AIRConstructionCodeA">
				<xsl:if test="$var25_current/@AIRConstructionCodeA">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var7_AIRConstructionCodeA))) != 'false'">
				<xsl:attribute name="ConBldg">
					<xsl:value-of select="string($var25_current/@AIRConstructionCodeA)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var8_AIRConstructionCodeB">
				<xsl:if test="$var25_current/@AIRConstructionCodeB">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var8_AIRConstructionCodeB))) != 'false'">
				<xsl:attribute name="ConOStr">
					<xsl:value-of select="string($var25_current/@AIRConstructionCodeB)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:attribute name="DamageModFactor">
				<xsl:value-of select="$var23_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="OccType">AIR</xsl:attribute>
			<xsl:variable name="var9_AIROccupancyCode">
				<xsl:if test="$var25_current/@AIROccupancyCode">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var9_AIROccupancyCode))) != 'false'">
				<xsl:attribute name="Occ">
					<xsl:value-of select="string($var25_current/@AIROccupancyCode)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var10_YearBuilt">
				<xsl:if test="$var25_current/@YearBuilt">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var10_YearBuilt))) != 'false'">
				<xsl:attribute name="YearBuilt">
					<xsl:value-of select="string($var25_current/@YearBuilt)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var11_Stories">
				<xsl:if test="$var25_current/@Stories">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var11_Stories))) != 'false'">
				<xsl:attribute name="Stories">
					<xsl:value-of select="string($var25_current/@Stories)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:attribute name="GRCBldg">
				<xsl:value-of select="$var23_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="GRCCont">
				<xsl:value-of select="$var23_resultof_cast"/>
			</xsl:attribute>
			<xsl:variable name="var12_GrossArea">
				<xsl:if test="$var25_current/@GrossArea">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var12_GrossArea))) != 'false'">
				<xsl:attribute name="GrossArea">
					<xsl:value-of select="string($var25_current/@GrossArea)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:attribute name="PerilCount">
				<xsl:value-of select="$var23_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Peril">PWH</xsl:attribute>
			<xsl:attribute name="LimitType">C</xsl:attribute>
			<xsl:attribute name="Limit1">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Limit2">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Limit3">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Limit4">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Participation">
				<xsl:value-of select="$var23_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Participation2">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="DedType">SA</xsl:attribute>
			<xsl:attribute name="Ded1">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Ded2">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Ded3">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Ded4">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Territory">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="SublimitArea">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="ReinsCount">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="ReinsOrder"></xsl:attribute>
			<xsl:attribute name="ReinsType"></xsl:attribute>
			<xsl:attribute name="ReinsCID"></xsl:attribute>
			<xsl:attribute name="Reinsfield1"></xsl:attribute>
			<xsl:attribute name="Reinsfield2"></xsl:attribute>
			<xsl:attribute name="Reinsfield3">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Reinsfield4"></xsl:attribute>
			<xsl:attribute name="RecTypeCode64">
				<xsl:value-of select="string('64')"/>
			</xsl:attribute>
			<xsl:attribute name="PolID64">
				<xsl:value-of select="$var23_resultof_cast"/>
			</xsl:attribute>
			<xsl:if test="string($var22_resultof_exists) != 'false'">
				<xsl:attribute name="LocID64">
					<xsl:value-of select="string($var25_current/@ROW_ID)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:attribute name="SealApprove">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrFloorOfInterest">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrBldCond">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Pounding">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrTreeExposure">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrSmallDebris">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrLargeMissile">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrTerrainRoughness">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrAdBldHeight">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrBldOrientation">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrShape">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrTorsion">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrSoftStory">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrStrucIrreg">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrSpecial">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrRetrofit">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:variable name="var13_RoofGeometryCode">
				<xsl:if test="$var25_current/@RoofGeometryCode">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var13_RoofGeometryCode))) != 'false'">
				<xsl:attribute name="IrRoofGeometry">
					<xsl:value-of select="string($var25_current/@RoofGeometryCode)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var14_RoofPitchCode">
				<xsl:if test="$var25_current/@RoofPitchCode">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var14_RoofPitchCode))) != 'false'">
				<xsl:attribute name="IrRoofPitch">
					<xsl:value-of select="string($var25_current/@RoofPitchCode)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var15_RoofCoverCode">
				<xsl:if test="$var25_current/@RoofCoverCode">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var15_RoofCoverCode))) != 'false'">
				<xsl:attribute name="IrRoofCover">
					<xsl:value-of select="string($var25_current/@RoofCoverCode)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var16_RoofDeckCode">
				<xsl:if test="$var25_current/@RoofDeckCode">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var16_RoofDeckCode))) != 'false'">
				<xsl:attribute name="IrRoofDeck">
					<xsl:value-of select="string($var25_current/@RoofDeckCode)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:attribute name="IrRoofCoverAttch">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:variable name="var17_RoofDeckAttachCode">
				<xsl:if test="$var25_current/@RoofDeckAttachCode">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var17_RoofDeckAttachCode))) != 'false'">
				<xsl:attribute name="IrRoofDeckAttch">
					<xsl:value-of select="string($var25_current/@RoofDeckAttachCode)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var18_RoofAnchorageCode">
				<xsl:if test="$var25_current/@RoofAnchorageCode">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var18_RoofAnchorageCode))) != 'false'">
				<xsl:attribute name="IrRoofAnchorage">
					<xsl:value-of select="string($var25_current/@RoofAnchorageCode)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var19_RoofYearBuilt">
				<xsl:if test="$var25_current/@RoofYearBuilt">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var19_RoofYearBuilt))) != 'false'">
				<xsl:attribute name="IrRoofBuilt">
					<xsl:value-of select="string($var25_current/@RoofYearBuilt)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:attribute name="IrWall">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrWallSiding">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrGlassType">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrGlassPercent">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:variable name="var20_WindowProtectionCode">
				<xsl:if test="$var25_current/@WindowProtectionCode">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var20_WindowProtectionCode))) != 'false'">
				<xsl:attribute name="IrWindowProt">
					<xsl:value-of select="string($var25_current/@WindowProtectionCode)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:attribute name="IrExteriorDoors">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrBldFndConn">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrFoundation">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrIntPartition">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="IrAttachStruct">
				<xsl:value-of select="string('8')"/>
			</xsl:attribute>
			<xsl:attribute name="IrAppurtStruct">
				<xsl:value-of select="string('6')"/>
			</xsl:attribute>
			<xsl:attribute name="IrMechSystem">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="ShortColumn">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="BigExtOpnh">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Omamentation">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Equipment">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="WaterHeater">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Redundancy">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="BrickVeneer">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="TallOne-Story">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Tanks">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Chimney">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="ColumnBasement">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Multi-StoryHall">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Lattice">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="Welding">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="TransitioninSRC">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="ColdFormedTube">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="ISValue">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="CustomFloodZone">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="CustomFloodStandardofProtection">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="ProjectPhase">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
			<xsl:attribute name="ProjectCompletion">
				<xsl:value-of select="$var24_resultof_cast"/>
			</xsl:attribute>
		</rec>
	</xsl:template>
	<xsl:template name="agt:MapToModelLocARA_Cede_var28_resultof_map">
		<xsl:param name="var27_current"/>
		<xsl:for-each select="$var27_current/rec">
			<xsl:call-template name="agt:MapToModelLocARA_Cede_var26_function">
				<xsl:with-param name="var25_current" select="."/>
			</xsl:call-template>
		</xsl:for-each>
	</xsl:template>
	<xsl:template match="/">
		<root>
			<xsl:attribute name="xsi:noNamespaceSchemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance">C:/Users/Administrator/Desktop/dbFiles/Transformations/ARA/AIR/ValidationFiles/ModelLocARA_Cede.xsd</xsl:attribute>
			<xsl:for-each select="root">
				<xsl:call-template name="agt:MapToModelLocARA_Cede_var28_resultof_map">
					<xsl:with-param name="var27_current" select="."/>
				</xsl:call-template>
			</xsl:for-each>
		</root>
	</xsl:template>
</xsl:stylesheet>
